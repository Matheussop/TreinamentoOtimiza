Modificadores de acesso: 
    Accesivel apenas pelo Assembly ou seja pelas classes do projeto 
    e o Protected Internal expande esse acesso para classes que herdam  de outro projeto.

AutoImplement usando para atribuir get e set automaticamente 

    Exemplo: 
        private string Nome { get; set;}
        
         um outro exemplo é 

            public string nome {
            set {
                nome = value.Trim().ToUpper();
            } get {
                return nome;
            }
        } 

readOnly n dx modificar a variavel fora da classe , podendo ser modificado apenas dentro
do seu construtor ou na hora da sua criação;

para passar um parametro por referencia é so na hora da passagem de parametros colocar 'ref' antes do tipo da variavel 
usando a palavra 'out' permitira que a variavel possa ser apenas auterada e nao mais lida.
permite fazer retorno de dois valores.

'params' permite passagem de um array sem definição de tamanho  ou declaração do array de
Exemplo: 
    VariaEntradas03('Matheus''Luiz''Oliveira''Spindula');

    static void VariaEntradas03(params string[] nomes);


C# permite a criação de classes parciais , podendo ser feita em dois arquivos separados.

Classe abstrata n pode ser instanciada apenas herdada .

O uso da palavra Sealed , significa que a classe que usa Sealed n pode possuir herdeiros.

Interface , diz oque a classe deve ter em seu escopo.(nada dentro dela vai ter uma implementação )
para usar Interface é necessario usar o comando Implement.

Enumerados 
    Exemplo:

    namespace _01_Enumeradores{
        enum EstadoCivil
        {
            Solteiro = 1, Casado , Viuvo , Divorciado
        }
    }

Erros C#:
    o comando "throw new Exception" lança um tipo de exeção  

Trabalhando com arquivos:
    Importar a classe System.IO 

    "using SYystem.IO"






